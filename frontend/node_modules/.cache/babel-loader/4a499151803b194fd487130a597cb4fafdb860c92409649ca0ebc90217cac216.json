{"ast":null,"code":"var _jsxFileName = \"/Users/rohansingh/Desktop/WebDev/LiveStock_Project/frontend/src/Pages/LiveStock.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Box, Button, Text, Input } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveStock = () => {\n  _s();\n  const [prediction, setPrediction] = useState(null); // State to store the prediction\n  const [classification, setClassification] = useState(null); // State to store the classification\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: 'image/*,video/*',\n    onDrop: acceptedFiles => {\n      console.log(acceptedFiles);\n      // Here you would send the file to your model API for prediction\n      // For now, we'll mock a prediction and classification\n      const mockPrediction = \"Foot-and-Mouth Disease\"; // Replace this with actual prediction logic\n      const mockClassification = \"Classified as Severe\"; // Replace with actual classification logic\n      setPrediction(mockPrediction); // Set the prediction result\n      setClassification(mockClassification); // Set the classification result\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 6,\n    maxW: \"1200px\",\n    mx: \"auto\",\n    mt: 10,\n    bg: \"#f7f7f8\",\n    borderRadius: \"md\",\n    boxShadow: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      mb: 8,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Batch Name\",\n        bg: \"white\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"md\",\n        mb: 4,\n        p: 4,\n        defaultValue: `Uploaded on ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}`,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ...getRootProps(),\n      border: \"2px dashed #ccc\",\n      borderRadius: \"md\",\n      p: 10,\n      textAlign: \"center\",\n      bg: \"white\",\n      color: \"#333\",\n      _hover: {\n        borderColor: '#888'\n      },\n      cursor: \"pointer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('/Users/rohansingh/Desktop/WebDev/LiveStock_Project/frontend/src/Images/dropdown_image_icon.jpeg'),\n          alt: \"Upload Icon\",\n          style: {\n            width: '50px',\n            marginBottom: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), isDragActive ? /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          color: \"purple.500\",\n          children: \"Drop the files here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          color: \"purple.500\",\n          children: \"Drag and drop to upload, or:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          mt: 4,\n          colorScheme: \"purple\",\n          variant: \"outline\",\n          children: \"Select Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"sm\",\n          mt: 2,\n          color: \"gray.600\",\n          children: \"Supported Formats: Images (jpg, png, etc.), Annotations, Videos (mov, mp4)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 8,\n      p: 4,\n      border: \"1px solid #ccc\",\n      borderRadius: \"md\",\n      bg: \"#fff\",\n      boxShadow: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        fontWeight: \"bold\",\n        color: \"purple.500\",\n        children: \"Predicted Disease:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"md\",\n        color: \"gray.700\",\n        children: prediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), classification && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      p: 4,\n      border: \"1px solid #ccc\",\n      borderRadius: \"md\",\n      bg: \"#fff\",\n      boxShadow: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"xl\",\n        fontWeight: \"bold\",\n        color: \"purple.500\",\n        children: \"Classification:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"md\",\n        color: \"gray.700\",\n        children: classification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveStock, \"qpgFDIT3mUNmSVC+h/XEzXjW8L8=\", false, function () {\n  return [useDropzone];\n});\n_c = LiveStock;\nexport default LiveStock;\nvar _c;\n$RefreshReg$(_c, \"LiveStock\");","map":{"version":3,"names":["React","useState","useDropzone","Box","Button","Text","Input","jsxDEV","_jsxDEV","LiveStock","_s","prediction","setPrediction","classification","setClassification","getRootProps","getInputProps","isDragActive","accept","onDrop","acceptedFiles","console","log","mockPrediction","mockClassification","p","maxW","mx","mt","bg","borderRadius","boxShadow","children","textAlign","mb","placeholder","border","defaultValue","Date","toLocaleDateString","toLocaleTimeString","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","color","_hover","borderColor","cursor","src","require","alt","style","width","marginBottom","fontSize","colorScheme","variant","fontWeight","_c","$RefreshReg$"],"sources":["/Users/rohansingh/Desktop/WebDev/LiveStock_Project/frontend/src/Pages/LiveStock.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Box, Button, Text, Input } from '@chakra-ui/react';\n\nconst LiveStock = () => {\n  const [prediction, setPrediction] = useState(null); // State to store the prediction\n  const [classification, setClassification] = useState(null); // State to store the classification\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: 'image/*,video/*',\n    onDrop: (acceptedFiles) => {\n      console.log(acceptedFiles);\n      // Here you would send the file to your model API for prediction\n      // For now, we'll mock a prediction and classification\n      const mockPrediction = \"Foot-and-Mouth Disease\"; // Replace this with actual prediction logic\n      const mockClassification = \"Classified as Severe\"; // Replace with actual classification logic\n      setPrediction(mockPrediction); // Set the prediction result\n      setClassification(mockClassification); // Set the classification result\n    }\n  });\n\n  return (\n    <Box\n      p={6}\n      maxW=\"1200px\"\n      mx=\"auto\"\n      mt={10}\n      bg=\"#f7f7f8\"\n      borderRadius=\"md\"\n      boxShadow=\"lg\"\n    >\n      <Box textAlign=\"center\" mb={8}>\n        <Input\n          placeholder=\"Batch Name\"\n          bg=\"white\"\n          border=\"1px solid #ccc\"\n          borderRadius=\"md\"\n          mb={4}\n          p={4}\n          defaultValue={`Uploaded on ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}`}\n          readOnly\n        />\n      </Box>\n\n      <Box\n        {...getRootProps()}\n        border=\"2px dashed #ccc\"\n        borderRadius=\"md\"\n        p={10}\n        textAlign=\"center\"\n        bg=\"white\"\n        color=\"#333\"\n        _hover={{ borderColor: '#888' }}\n        cursor=\"pointer\"\n      >\n        <input {...getInputProps()} />\n        <Box>\n          <img\n            src={require('/Users/rohansingh/Desktop/WebDev/LiveStock_Project/frontend/src/Images/dropdown_image_icon.jpeg')}\n            alt=\"Upload Icon\"\n            style={{ width: '50px', marginBottom: '20px' }}\n          />\n          {isDragActive ? (\n            <Text fontSize=\"lg\" color=\"purple.500\">Drop the files here...</Text>\n          ) : (\n            <Text fontSize=\"lg\" color=\"purple.500\">Drag and drop to upload, or:</Text>\n          )}\n          <Button\n            mt={4}\n            colorScheme=\"purple\"\n            variant=\"outline\"\n          >\n            Select Files\n          </Button>\n          <Text fontSize=\"sm\" mt={2} color=\"gray.600\">\n            Supported Formats: Images (jpg, png, etc.), Annotations, Videos (mov, mp4)\n          </Text>\n        </Box>\n      </Box>\n\n      {prediction && (\n        <Box\n          mt={8}\n          p={4}\n          border=\"1px solid #ccc\"\n          borderRadius=\"md\"\n          bg=\"#fff\"\n          boxShadow=\"md\"\n        >\n          <Text fontSize=\"xl\" fontWeight=\"bold\" color=\"purple.500\">Predicted Disease:</Text>\n          <Text fontSize=\"md\" color=\"gray.700\">{prediction}</Text>\n        </Box>\n      )}\n\n      {classification && (\n        <Box\n          mt={4}\n          p={4}\n          border=\"1px solid #ccc\"\n          borderRadius=\"md\"\n          bg=\"#fff\"\n          boxShadow=\"md\"\n        >\n          <Text fontSize=\"xl\" fontWeight=\"bold\" color=\"purple.500\">Classification:</Text>\n          <Text fontSize=\"md\" color=\"gray.700\">{classification}</Text>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default LiveStock;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}