{"ast":null,"code":"var _jsxFileName = \"/Users/rohansingh/Desktop/WebDev/LiveStock_Project/frontend/src/Pages/CropDisease.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CropDisease = () => {\n  _s();\n  const [prediction, setPrediction] = useState(null);\n  const [classification, setClassification] = useState(null);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: \"image/*,video/*\",\n    onDrop: acceptedFiles => {\n      console.log(acceptedFiles);\n      const mockPrediction = \"Foot-and-Mouth Disease\";\n      const mockClassification = \"Classified as Severe\";\n      setPrediction(mockPrediction);\n      setClassification(mockClassification);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"sdcndbieasxlndkfiuebincdakbueb\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_s(CropDisease, \"qpgFDIT3mUNmSVC+h/XEzXjW8L8=\", true);\n_c = CropDisease;\nexport default CropDisease;\nvar _c;\n$RefreshReg$(_c, \"CropDisease\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CropDisease","_s","prediction","setPrediction","useState","classification","setClassification","getRootProps","getInputProps","isDragActive","useDropzone","accept","onDrop","acceptedFiles","console","log","mockPrediction","mockClassification","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rohansingh/Desktop/WebDev/LiveStock_Project/frontend/src/Pages/CropDisease.js"],"sourcesContent":["import React from \"react\";\n\nconst CropDisease = () => {\n  const [prediction, setPrediction] = useState(null);\n  const [classification, setClassification] = useState(null);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: \"image/*,video/*\",\n    onDrop: (acceptedFiles) => {\n      console.log(acceptedFiles);\n      const mockPrediction = \"Foot-and-Mouth Disease\";\n      const mockClassification = \"Classified as Severe\";\n      setPrediction(mockPrediction);\n      setClassification(mockClassification);\n    },\n  });\n  return <div>sdcndbieasxlndkfiuebincdakbueb</div>;\n};\n\nexport default CropDisease;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAM;IAAEG,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGC,WAAW,CAAC;IAChEC,MAAM,EAAE,iBAAiB;IACzBC,MAAM,EAAGC,aAAa,IAAK;MACzBC,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;MAC1B,MAAMG,cAAc,GAAG,wBAAwB;MAC/C,MAAMC,kBAAkB,GAAG,sBAAsB;MACjDd,aAAa,CAACa,cAAc,CAAC;MAC7BV,iBAAiB,CAACW,kBAAkB,CAAC;IACvC;EACF,CAAC,CAAC;EACF,oBAAOlB,OAAA;IAAAmB,QAAA,EAAK;EAA8B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAClD,CAAC;AAACrB,EAAA,CAfID,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAiBjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}